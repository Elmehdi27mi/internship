
package net.mehdi.activemqjms.wsdlReq;

import jakarta.xml.ws.*;

import javax.xml.namespace.QName;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "SOnePersistRequestImplService", targetNamespace = "http://sonePersistRequest.ws.sofac.ma", wsdlLocation = "file:/C:/Users/Dell/OneDrive/Bureau/internship/active-mq-jms/src/main/java/net/mehdi/activemqjms/wsdl/SonePersistRequest.wsdl")
public class SOnePersistRequestImplService
    extends Service
{

    private static final URL SONEPERSISTREQUESTIMPLSERVICE_WSDL_LOCATION;
    private static final WebServiceException SONEPERSISTREQUESTIMPLSERVICE_EXCEPTION;
    private static final QName SONEPERSISTREQUESTIMPLSERVICE_QNAME = new QName("http://sonePersistRequest.ws.sofac.ma", "SOnePersistRequestImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/Dell/OneDrive/Bureau/internship/active-mq-jms/src/main/java/net/mehdi/activemqjms/wsdl/SonePersistRequest.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SONEPERSISTREQUESTIMPLSERVICE_WSDL_LOCATION = url;
        SONEPERSISTREQUESTIMPLSERVICE_EXCEPTION = e;
    }

    public SOnePersistRequestImplService() {
        super(__getWsdlLocation(), SONEPERSISTREQUESTIMPLSERVICE_QNAME);
    }

    public SOnePersistRequestImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SONEPERSISTREQUESTIMPLSERVICE_QNAME, features);
    }

    public SOnePersistRequestImplService(URL wsdlLocation) {
        super(wsdlLocation, SONEPERSISTREQUESTIMPLSERVICE_QNAME);
    }

    public SOnePersistRequestImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SONEPERSISTREQUESTIMPLSERVICE_QNAME, features);
    }

    public SOnePersistRequestImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SOnePersistRequestImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SOnePersistRequest
     */
    @WebEndpoint(name = "SOnePersistRequestPort")
    public SOnePersistRequest getSOnePersistRequestPort() {
        return super.getPort(new QName("http://sonePersistRequest.ws.sofac.ma", "SOnePersistRequestPort"), SOnePersistRequest.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SOnePersistRequest
     */
    @WebEndpoint(name = "SOnePersistRequestPort")
    public SOnePersistRequest getSOnePersistRequestPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://sonePersistRequest.ws.sofac.ma", "SOnePersistRequestPort"), SOnePersistRequest.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SONEPERSISTREQUESTIMPLSERVICE_EXCEPTION!= null) {
            throw SONEPERSISTREQUESTIMPLSERVICE_EXCEPTION;
        }
        return SONEPERSISTREQUESTIMPLSERVICE_WSDL_LOCATION;
    }

}
